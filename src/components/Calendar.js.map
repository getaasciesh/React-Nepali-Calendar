{"version":3,"file":"Calendar.js","sourceRoot":"","sources":["Calendar.tsx"],"names":[],"mappings":";;AAAA,+BAA+B;AAC/B,uDAAuD;AACvD,2CAAoC;AACpC,uDAAgD;AAYhD,cAAe,SAAQ,KAAK,CAAC,SAAwC;IAEnE,YAAmB,KAAK,EAAE,KAAK;QAC7B,KAAK,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;QACpB,MAAM,IAAI,GAAG,KAAK,CAAC,WAAW,IAAI,IAAI,IAAI,EAAE,CAAC;QAC7C,IAAI,CAAC,KAAK,GAAG;YACX,UAAU,EAAE,IAAI;YAChB,YAAY,EAAE,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,WAAW,EAAE,EAAE,IAAI,CAAC,QAAQ,EAAE,EAAE,IAAI,CAAC,MAAM,EAAE,CAAC;SACrF,CAAA;IACH,CAAC;IAEO,oBAAoB,CAAC,IAAI,EAAE,KAAK;QACtC,IAAI,CAAC,QAAQ,CAAC;YACZ,YAAY,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE,OAAO,EAAE,KAAK,EAAE,MAAM,EAAE,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,MAAM,EAAE;SACvF,CAAC,CAAC;IACL,CAAC;IAEM,MAAM;QACX,MAAM,EAAE,MAAM,EAAE,OAAO,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC;QACpD,OAAO,CACL;YACE,oBAAC,yBAAe,IACd,YAAY,EAAE,OAAO,EACrB,WAAW,EAAE,MAAM,EAAE,QAAQ,EAAE,CAAC,IAAI,EAAE,KAAK,EAAE,EAAE,CAAC,IAAI,CAAC,oBAAoB,CAAC,IAAI,EAAE,KAAK,CAAC,GAAI;YAC5F,oBAAC,mBAAS,IACR,UAAU,EAAE,MAAM,EAClB,WAAW,EAAE,OAAO,EACpB,iBAAiB,EAAE,IAAI,CAAC,KAAK,CAAC,UAAU,EACxC,YAAY,EAAE,CAAC,IAAI,EAAE,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,IAAI,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAA,CAAC,CAAC,GAAI,CAC9E,CACP,CAAC;IACJ,CAAC;CACF;AAED,kBAAe,QAAQ,CAAC","sourcesContent":["import * as React from 'react';\nimport * as calF from '../functions/calendarFunctions';\nimport MonthView from './MonthView';\nimport YearMonthSwitch from './YearMonthSwitch';\n\nexport interface CalendarProps {\n  defaultDate?: Date\n  onChange?: (date: Date) => void;\n}\n\nexport interface CalendarStates {\n  activeDate: Date\n  activeBsDate: { bsYear: number, bsMonth: number, bsDate: number }\n}\n\nclass Calendar extends React.Component<CalendarProps, CalendarStates> {\n\n  public constructor(props, state) {\n    super(props, state);\n    const date = props.defaultDate || new Date();\n    this.state = {\n      activeDate: date,\n      activeBsDate: calF.convertADtoBS(date.getFullYear(), date.getMonth(), date.getDay())\n    }\n  }\n\n  private switchViewsYearMonth(year, month) {\n    this.setState({\n      activeBsDate: { bsYear: year, bsMonth: month, bsDate: this.state.activeBsDate.bsDate }\n    });\n  }\n\n  public render(): JSX.Element {\n    const { bsYear, bsMonth } = this.state.activeBsDate;\n    return (\n      <div>\n        <YearMonthSwitch\n          defaultMonth={bsMonth}\n          defaultYear={bsYear} onSwitch={(year, month) => this.switchViewsYearMonth(year, month)} />\n        <MonthView\n          viewBsYear={bsYear}\n          viewBsMonth={bsMonth}\n          defaultActiveDate={this.state.activeDate}\n          onDayClicked={(date) => { this.props.onChange && this.props.onChange(date) }} />\n      </div>\n    );\n  }\n}\n\nexport default Calendar;"]}