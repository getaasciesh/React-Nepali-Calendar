{"version":3,"file":"MonthView.js","sourceRoot":"","sources":["MonthView.tsx"],"names":[],"mappings":"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","sourcesContent":["\nimport styles from './Calendar.css';\n\nimport * as React from 'react';\nimport calendarData from '../functions/calendarData';\nimport * as calFns from '../functions/calendarFunctions';\n\ninterface MonthViewProps {\n  onDayClicked: (date: Date) => void\n  viewBsYear: number\n  viewBsMonth: number\n  defaultActiveDate: Date\n}\n\ninterface MonthViewState {\n  selectedDate: Date;\n}\n\nclass MonthView extends React.Component<MonthViewProps, MonthViewState> {\n\n  public state = { selectedDate: new Date() };\n\n  private getDayInfo(date: Date) {\n    const bsDate = calFns.getBsDateByAdDate(date.getFullYear(), date.getMonth() + 1, date.getDate());\n    return { adDate: new Date(date), ...(bsDate) }\n  }\n\n  private getDays() {\n    let startDay, lastDay;\n    const { viewBsMonth, viewBsYear } = this.props;\n    startDay = calFns.getAdDateByBsDate(viewBsYear, viewBsMonth, 1);\n    startDay.setDate(startDay.getDate() - startDay.getDay()); // Sunday, the first day in the view\n    lastDay = calFns.getAdDateByBsDate(viewBsYear, viewBsMonth, calFns.getBsMonthDays(viewBsYear, viewBsMonth));\n    lastDay.setDate(lastDay.getDate() + (6 - lastDay.getDay())); // Saturday, the last day in the view\n    const days = [];\n    while (startDay <= lastDay) {\n      days.push(this.getDayInfo(startDay));\n      startDay.setDate(startDay.getDate() + 1)\n    }\n    return days;\n  }\n\n  private isSameDate(adDate: Date, toMatch: Date = new Date()) {\n    return adDate.getDate() == toMatch.getDate() &&\n      adDate.getMonth() == toMatch.getMonth() &&\n      adDate.getFullYear() == toMatch.getFullYear();\n  }\n\n  private onDaySelect(date: Date) {\n    this.setState({ selectedDate: date });\n    this.props.onDayClicked(date);\n  }\n\n  public render(): JSX.Element {\n    return (\n      <div className={`r-n-cal-month-view ${styles.calendar}`}>\n        <div className={`r-n-cal-weekdays ${styles.weekdays}`}>\n          {\n            calendarData.bsDays.map((day) => (\n              <div key={day} className={styles.weekday}>{day}</div>\n            ))\n          }\n        </div>\n        <div className={styles.days}>\n          {\n            this.getDays().map(({ adDate, bsDate, bsMonth }) => (\n              <div\n                className={\n                  `${styles.day} ${bsMonth !== this.props.viewBsMonth ? styles.dayMuted : ''} \n                  ${this.isSameDate(adDate) ? styles.today : ''} \n                  ${this.isSameDate(adDate, this.state.selectedDate) ? styles.selectedDay : ''} \n                  `\n                }\n                key={`${bsDate} ${bsMonth}`}\n                onClick={() => this.onDaySelect(adDate)}>\n                {calFns.toDevanagariDigits(bsDate)}\n              </div>\n            ))\n          }\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default MonthView;"]}