{"version":3,"file":"calendarFunctions.js","sourceRoot":"","sources":["calendarFunctions.ts"],"names":[],"mappings":"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","sourcesContent":["import * as calendarFunctions from '../calendarFunctions';\n\ndescribe('Calendar functions', () => {\n  it('should correctly convert roman numbers to devanagari', () => {\n    expect(calendarFunctions.toDevanagariDigits(909)).toBe('९०९');\n    expect(calendarFunctions.toDevanagariDigits(87641)).toBe('८७६४१');\n    expect(calendarFunctions.toDevanagariDigits(53592)).toBe('५३५९२');\n  });\n\n  it('should get correct number of days for a given bs month', () => {\n    expect(calendarFunctions.getBsMonthDays(2075, 3)).toBe(32);\n    expect(calendarFunctions.getBsMonthDays(2078, 6)).toBe(31);\n    expect(calendarFunctions.getBsMonthDays(2067, 8)).toBe(29);\n    expect(calendarFunctions.getBsMonthDays(2046, 9)).toBe(29);\n    expect(calendarFunctions.getBsMonthDays(2074, 2)).toBe(31);\n    expect(calendarFunctions.getBsMonthDays(2076, 7)).toBe(30);\n    expect(calendarFunctions.getBsMonthDays(2075, 1)).toBe(31);\n    expect(calendarFunctions.getBsMonthDays(2077, 5)).toBe(31);\n  });\n\n  it('should correctly convert ad date to bs date', () => {\n    expect(calendarFunctions.getBsDateByAdDate(2018, 7, 7)).\n      toEqual({ \"bsDate\": 23, \"bsMonth\": 3, \"bsYear\": 2075 });\n    expect(calendarFunctions.getBsDateByAdDate(2018, 8, 18)).\n      toEqual({ \"bsDate\": 2, \"bsMonth\": 5, \"bsYear\": 2075 });\n    expect(calendarFunctions.getBsDateByAdDate(2018, 9, 10)).\n      toEqual({ \"bsDate\": 25, \"bsMonth\": 5, \"bsYear\": 2075 });\n    expect(calendarFunctions.getBsDateByAdDate(2018, 12, 30)).\n      toEqual({ \"bsDate\": 15, \"bsMonth\": 9, \"bsYear\": 2075 });\n    expect(calendarFunctions.getBsDateByAdDate(2019, 1, 1)).\n      toEqual({ \"bsDate\": 17, \"bsMonth\": 9, \"bsYear\": 2075 });\n    expect(calendarFunctions.getBsDateByAdDate(2019, 6, 23)).\n      toEqual({ \"bsDate\": 8, \"bsMonth\": 3, \"bsYear\": 2076 });\n    expect(calendarFunctions.getBsDateByAdDate(2025, 9, 11)).\n      toEqual({ \"bsDate\": 26, \"bsMonth\": 5, \"bsYear\": 2082 });\n    expect(calendarFunctions.getBsDateByAdDate(2028, 3, 13)).\n      toEqual({ \"bsDate\": 30, \"bsMonth\": 11, \"bsYear\": 2084 });\n    expect(calendarFunctions.getBsDateByAdDate(2017, 4, 13)).\n      toEqual({ \"bsDate\": 31, \"bsMonth\": 12, \"bsYear\": 2073 });\n  });\n\n  it('should correctly convert bs date to ad date', () => {\n    expect(calendarFunctions.getAdDateByBsDate(2076, 3, 8)).\n      toEqual(new Date(2019, 5, 23));\n    expect(calendarFunctions.getAdDateByBsDate(2075, 4, 1)).\n      toEqual(new Date(2018, 6, 17));\n    expect(calendarFunctions.getAdDateByBsDate(2075, 5, 7)).\n      toEqual(new Date(2018, 7, 23));\n    expect(calendarFunctions.getAdDateByBsDate(2075, 7, 19)).\n      toEqual(new Date(2018, 10, 5));\n    expect(calendarFunctions.getAdDateByBsDate(2075, 11, 1)).\n      toEqual(new Date(2019, 1, 13));\n    expect(calendarFunctions.getAdDateByBsDate(2076, 1, 23)).\n      toEqual(new Date(2019, 4, 6));\n    expect(calendarFunctions.getAdDateByBsDate(2076, 2, 29)).\n      toEqual(new Date(2019, 5, 12));\n    expect(calendarFunctions.getAdDateByBsDate(2083, 6, 16)).\n      toEqual(new Date(2026, 9, 2));\n    expect(calendarFunctions.getAdDateByBsDate(2087, 8, 18)).\n      toEqual(new Date(2030, 11, 4));\n    expect(calendarFunctions.getAdDateByBsDate(2073, 12, 31)).\n      toEqual(new Date(2017, 3, 13));\n  });\n})"]}